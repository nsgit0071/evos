import asyncio
import logging
import keyboard
from config import BOT_TOKEN
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram import F
from aiogram.filters.state import State, StatesGroup
from aiogram.types import Contact

bot = Bot(token=BOT_TOKEN, parse_mode='HTML')
dp = Dispatcher()


class Auth(StatesGroup):
    name = State()
    location = State()
    lang = State()


# Start
@dp.message(CommandStart())
async def handler_start(message: types.Message):
    text = f"EVOS | –î–æ—Å—Ç–∞–≤–∫–∞ botiga xush kelibsiz!{message.from_user.full_name}"

    await message.answer(text=text, reply_markup=keyboard.main)


# Start End

# Menu
@dp.message(F.text == 'üç¥ –ú–µ–Ω—é')
async def menu(message: types.Message):

    await message.answer(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ üìç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", reply_markup=keyboard.menu)


# Menu End In
# Menu > Address
@dp.message(F.text == 'üó∫ –ú–æ–∏ –∞–¥—Ä–µ—Å–∞')
async def myAddress(message: types.Message):

    await message.answer(text="–ü—É—Å—Ç–æ", reply_markup=keyboard.myAddress)


# Menu > Address End


# Menu End

# MY Cart
@dp.message(F.text == 'üõç –ú–æ–∏ –∑–∞–∫–∞–∑—ã')
async def myCart(message: types.MenuButton):
    # Navigate back to the initial menu (handler_start)
    await message.answer(text="–í—ã —Å–æ–≤—Å–µ–º –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–∞–∑–∞–ª–∏.")


# MY Cart End

# help
@dp.message(F.text == '‚úçÔ∏è–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
async def help(message: types.MenuButton):
    # Navigate back to the initial menu (handler_start)
    await message.answer(text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–≤—è–∑–∏ —Å –í–∞–º–∏", reply_markup=keyboard.help)


# my number
# @dp.message(F.is_(Contact))
# async def cotact(message: types.Contact):
#     # Navigate back to the initial menu (handler_start)
#     await message.answer(text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–≤—è–∑–∏ —Å –í–∞–º–∏")


# help End

# Settings
@dp.message(F.text == '‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def setting(message: types.MenuButton):

    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard.setting)


# Lang
@dp.message(F.text == '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
async def settingLan(message: types.MenuButton):

    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=keyboard.settingLan)


# EndLang
# Settings End


# Back button
@dp.message(F.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
async def back_button(message: types.MenuButton):
    # Navigate back to the initial menu (handler_start)
    await handler_start(message)


# Back button End
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
